#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

#define MAX 100
#define INFINITY INT_MAX

int adj[MAX][MAX], dist[MAX], n, prev[MAX];

void Dijkstra(int start) {
    int i, j, u, v;
    for (i = 0; i < n; i++) {
        dist[i] = INFINITY;
        prev[i] = -1;
    }
    dist[start] = 0;
    for (i = 0; i < n; i++) {
        u = -1;
        for (j = 0; j < n; j++) {
            if (prev[j] == -1 && (u == -1 || dist[j] < dist[u])) {
                u = j;
            }
        }
        if (u == -1) {
            break;
        }
        prev[u] = 1;
        for (v = 0; v < n; v++) {
            if (adj[u][v] && dist[v] > dist[u] + adj[u][v]) {
                dist[v] = dist[u] + adj[u][v];
            }
        }
    }
}

int main() {
    int i, j, start;
    printf("Enter number of vertices: ");
    scanf("%d", &n);
    printf("Enter adjacency matrix:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &adj[i][j]);
        }
    }
    printf("Enter starting vertex: ");
    scanf("%d", &start);
    Dijkstra(start);
    printf("Shortest distances:\n");
    for (i = 0; i < n; i++) {
        if (i != start) {
            printf("%d -> %d: %d\n", start, i, dist[i]);
        }
    }
    return 0;
}
