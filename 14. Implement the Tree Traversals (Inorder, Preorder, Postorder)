#include <stdio.h>
#include <stdlib.h>

struct node {
   int data;
   struct node *left;
   struct node *right;
};

struct node* createNode(int item) {
   struct node* newNode = (struct node*) malloc(sizeof(struct node));
   newNode->data = item;
   newNode->left = NULL;
   newNode->right = NULL;
   return newNode;
}

void inorderTraversal(struct node *root) {
   if (root != NULL) {
      inorderTraversal(root->left);
      printf("%d ", root->data);
      inorderTraversal(root->right);
   }
}

void preorderTraversal(struct node *root) {
   if (root != NULL) {
      printf("%d ", root->data);
      preorderTraversal(root->left);
      preorderTraversal(root->right);
   }
}

void postorderTraversal(struct node *root) {
   if (root != NULL) {
      postorderTraversal(root->left);
      postorderTraversal(root->right);
      printf("%d ", root->data);
   }
}

int main() {
   struct node *root = createNode(1);
   root->left = createNode(2);
   root->right = createNode(3);
   root->left->left = createNode(4);
   root->left->right = createNode(5);

   printf("Inorder Traversal: ");
   inorderTraversal(root);
   printf("\n");

   printf("Preorder Traversal: ");
   preorderTraversal(root);
   printf("\n");

   printf("Postorder Traversal: ");
   postorderTraversal(root);
   printf("\n");

   return 0;
}
