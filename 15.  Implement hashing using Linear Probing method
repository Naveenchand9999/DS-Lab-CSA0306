#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define SIZE 20

struct DataItem {
   int data;
   int key;
};

struct DataItem* dataList[SIZE];
struct DataItem* item;

int getHashCode(int key) {
   return key % SIZE;
}

struct DataItem *search(int key) {
   int hashIndex = getHashCode(key);

   while(dataList[hashIndex] != NULL) {
      if(dataList[hashIndex]->key == key)
         return dataList[hashIndex];

      hashIndex = (hashIndex + 1) % SIZE;
   }
   return NULL;
}

void insert(int key, int data) {
   struct DataItem *item = (struct DataItem*) malloc(sizeof(struct DataItem));
   item->data = data;
   item->key = key;

   int hashIndex = getHashCode(key);

   while(dataList[hashIndex] != NULL && dataList[hashIndex]->key != -1) {
      hashIndex = (hashIndex + 1) % SIZE;
   }
   dataList[hashIndex] = item;
}

void display() {
   int i;

   for(i = 0; i < SIZE; i++) {
      if(dataList[i] != NULL)
         printf(" (%d,%d)",dataList[i]->key,dataList[i]->data);
      else
         printf(" -- ");
   }
   printf("\n");
}

int main() {
   insert(1, 20);
   insert(2, 70);
   insert(42, 80);
   insert(4, 25);
   insert(12, 44);
   insert(14, 32);
   insert(17, 11);
   insert(13, 78);
   insert(37, 97);

   display();
   item = search(37);

   if(item != NULL) {
      printf("Element found: %d\n", item->data);
   } else {
      printf("Element not found\n");
   }
   return 0;
}
